#Create a VIEW that hides sensitive or unnecessary columns from a table in your database.
CREATE VIEW customer_view AS
SELECT customer_id, first_name, last_name, email
FROM Customers;

#Add at least TWO INTEGRITY CONSTRAINTS to your tables. (Choose from: CHECK, UNIQUE,
FOREIGN KEY, NOT NULL)
///1.Add a CHECK constraint to ensure that the price in the Products table is always positive
ALTER TABLE Products
ADD CONSTRAINT check_price CHECK (price > 0);
///2.Add a UNIQUE constraint on the email column in the Customers table to prevent duplicate emails
ALTER TABLE Customers
ADD CONSTRAINT unique_email UNIQUE (email);
///3.Add a FOREIGN KEY constraint to ensure that customer_id in Orders exists in the Customers table
ALTER TABLE Orders
ADD CONSTRAINT fk_customer
FOREIGN KEY (customer_id) REFERENCES Customers(customer_id);

#Create an INDEX on a column that is often used in WHERE conditions or JOINs
CREATE INDEX idx_customer_id ON Orders (customer_id);

#Create and test a TRANSACTION
//Start Transaction
START TRANSACTION;
//Insert data
INSERT INTO Orders (customer_id, order_date, total_amount)
VALUES (2, NOW(), 1000.00);
//Update data
UPDATE Orders
SET total_amount = 1100.00
WHERE order_id = LAST_INSERT_ID();
//ROLLBACK or COMMIT
COMMIT;
//Show the result
SELECT * FROM Orders WHERE order_id = LAST_INSERT_ID();

#Write a COMPLEX QUERY that uses
///JOIN between multiple tables
SELECT Orders.order_id, Orders.total_amount, Customers.first_name, Customers.last_name
FROM Orders
INNER JOIN Customers ON Orders.customer_id = Customers.customer_id;
///A SUBQUERY
SELECT first_name, last_name
FROM Customers
WHERE customer_id IN (
    SELECT customer_id
    FROM Orders
    WHERE total_amount > 500
);
///A WHERE or HAVING condition
SELECT Customers.first_name, Customers.last_name, SUM(Orders.total_amount) AS total_spent
FROM Customers
INNER JOIN Orders ON Customers.customer_id = Orders.customer_id
GROUP BY Customers.customer_id
HAVING total_spent > 500;

#Create a new ROLE or USER and GRANT specific privileges like SELECT on your
view or table
CREATE USER 'readonly_user'@'localhost' IDENTIFIED BY 'password123';
GRANT SELECT ON retail_store.* TO 'readonly_user'@'localhost';
